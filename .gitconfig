[user]
    name = NicholasTD07
    email = Nicholas.TD07@gmail.com
[alias]
    a = add
    aa = add --all
    amd = commit --amend
    amend = commit --amend
    ap = add -p
    b = branch
    ba = branch -a
    bc = !~/bin/remove-merged-branches.py
    c = commit -v
    ca = commit -av
    cam = commit -am
    cav = commit -av
    cc = checkout -
    cd = checkout develop
    cd1 = clone --depth=1
    ci = check-ignore -v
    cl = clone
    cm = checkout master
    cmm = commit -m
    co = checkout
    # Must have fzf installed
    cof = !git branch --all | grep -v HEAD | fzf | xargs git checkout
    count = rev-list --count
    cp = cherry-pick
    cs = clone --depth 1
    cv = commit -v
    d = !cdiff
    dc = !cdiff --cached
    ds = diff --stat
    dss = diff --shortstat
    f = fetch
    h = !git head
    head = !GIT_NO_PAGER=1 git l -1
    hp = log -1 -p --pretty="tformat:"
    hard-reset = reset --hard
    hr = reset --hard
    l = log --graph --pretty='[%G?] %C(yellow)%h (%cr)%Cblue %an%C(magenta)%d%Creset %s'
    ls = ls-files
    lsd = ls-tree -d HEAD
    lso = ls-files --others
    lm = !git log --format=' *%C(bold red)%d%Creset %s %C(yellow)%h%Creset' # log for milestone
    lmr = !git log --reverse -20 --format=' *%C(bold red)%d%Creset %s %C(yellow)%h%Creset' # log for milestone REVERSED
    lp = log -p
    m = merge
    mab = merge --abort
    n = checkout -b
    nn = checkout --orphan
    no = !git count
    p = push
    po = !git push -u origin $(git symbolic-ref --short HEAD)
    pc = !git pp && git bc
    pp = pull
    ppr = pull --rebase
    pt = push --tags
    ppt = !git p && git pt
    pat = !git pa && git pt
    r = !GIT_NO_PAGER=1 git l -10
    rr = !GIT_NO_PAGER=1 git l -50
    rba = rebase --abort
    rbc = rebase --continue
    rh = !~/bin/checkout-history
    ri = rebase -i
    rs = reset
    size = !git count-objects -vH | grep size-pack
    ss = !git gc 1>/dev/null 2>&1 && git size
    s = status --short --branch
    sc = !git s | grep UU | sed -e 's/UU //g' -e 's/.*/\"&\"/g' # show merge conflicts
    st = stash save
    stc = stash clear
    stl = stash list
    stp = stash pop
    undo = !git stash && git reset --hard
    untracked = !git lfo

[color]
    ui=auto
[core]
    editor = nvim
	; gitproxy = git-proxy
[push]
    default = simple
[credential]
	helper = osxkeychain
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
# [socks]
# 	proxy = localhost:6777
# [http]
# 	proxy = socks5://localhost:6777
[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true
