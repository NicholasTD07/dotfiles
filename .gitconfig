[user]
    name = NicholasTD07
    email = Nicholas.TD07@gmail.com
[alias]
    a = add
    aa = add --all
    amd = commit --amend
    amend = commit --amend
    ap = add -p
    b = branch
    ba = branch -a
    bc = !~/bin/remove-merged-branches.py
    c = commit -v
    ca = commit -av
    cam = commit -am
    cav = commit -av
    cd = checkout develop
    cdpp = !git cd && git pp
    cdppo = !git stash && git cd && git pp && git co - && echo "Remember to pop stash"
    cd1 = clone --depth=1
    ci = check-ignore -v
    cl = clone
    cm = checkout master
    cmm = commit -m
    co = checkout
    cp = cherry-pick
    cs = clone --depth 1
    cv = commit -v
    d = diff
    dc = diff --cached
    ds = diff --stat
    dss = diff --shortstat
    f = fetch
    ls = ls-files
    lsd = ls-tree -d HEAD
    lso = ls-files --others
    lm = !git log --format=' *%C(bold red)%d%Creset %s %C(yellow)%h%Creset' # log for milestone
    lmr = !git log --reverse -20 --format=' *%C(bold red)%d%Creset %s %C(yellow)%h%Creset' # log for milestone REVERSED
    lp = log -p
    n = checkout -b
    nn = checkout --orphan
    p = push
    pc = !git pp && git bc
    pp = pull
    ppr = pull --rebase
    pa = push --all
    pd = !git cd && git pp && git co -
    pt = push --tags
    ppt = !git p && git pt
    pat = !git pa && git pt
    pr = !hub pull-request
    rba = rebase --abort
    rc = rebase --continue
    rh = !~/bin/checkout-history
    ri = rebase -i
    rs = reset
    ss = status
    s = status --short --branch
    sc = !git s | grep UU | sed -e 's/UU //g' -e 's/.*/\"&\"/g' # show merge conflicts
    st = stash save
    stc = stash clear
    stl = stash list
    stp = stash pop
    undo = !git stash && git reset --hard
    untracked = !git lfo

    # Fancy logging.
    #   h = head
    #   hp = head with patch
    #   r = recent commits, only current branch
    #   rn = limited numbers of recent commits
    #   ra = recent commits, all reachable refs
    #   l = all commits, only current branch
    #   la = all commits, all reachable refs
    #
    # This came from Gary Bernhardt's dotfiles:
    #     https://github.com/garybernhardt/dotfiles

    head = !git r -1
    h = !git head
    hp = "!. ~/.githelpers && show_git_head"
    r = !GIT_NO_PAGER=1 git l -10
    ra = !git r --all
    l = "!. ~/.githelpers && pretty_git_log"
    la = !git l --all

[color]
    ui=auto
[core]
    editor = vim
	; gitproxy = git-proxy
[push]
    default = simple
[credential]
	helper = osxkeychain
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
# [socks]
# 	proxy = localhost:6777
# [http]
# 	proxy = socks5://localhost:6777
[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true
